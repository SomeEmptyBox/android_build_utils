From 6d1276ad67ec5a023e4d65cec1e0c659cf756cef Mon Sep 17 00:00:00 2001
From: someone5678 <59456192+someone5678@users.noreply.github.com>
Date: Wed, 22 Jan 2025 23:56:19 +0900
Subject: [PATCH] PhoneInterfaceManager: Catch and check NullPointerException

Log:
01-22 23:47:57.709  3980  3980 E AndroidRuntime: FATAL EXCEPTION: main
01-22 23:47:57.709  3980  3980 E AndroidRuntime: Process: com.android.phone, PID: 3980
01-22 23:47:57.709  3980  3980 E AndroidRuntime: java.lang.NullPointerException: Attempt to invoke interface method 'void com.android.internal.telephony.IIntegerConsumer.accept(int)' on a null object reference
01-22 23:47:57.709  3980  3980 E AndroidRuntime: 	at com.android.phone.PhoneInterfaceManager$MainThreadHandler.handleMessage(PhoneInterfaceManager.java:2143)
01-22 23:47:57.709  3980  3980 E AndroidRuntime: 	at android.os.Handler.dispatchMessage(Handler.java:109)
01-22 23:47:57.709  3980  3980 E AndroidRuntime: 	at android.os.Looper.loopOnce(Looper.java:232)
01-22 23:47:57.709  3980  3980 E AndroidRuntime: 	at android.os.Looper.loop(Looper.java:317)
01-22 23:47:57.709  3980  3980 E AndroidRuntime: 	at android.app.ActivityThread.main(ActivityThread.java:8792)
01-22 23:47:57.709  3980  3980 E AndroidRuntime: 	at java.lang.reflect.Method.invoke(Native Method)
01-22 23:47:57.709  3980  3980 E AndroidRuntime: 	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:595)
01-22 23:47:57.709  3980  3980 E AndroidRuntime: 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:871)
01-22 23:48:09.676  5175  5175 E AndroidRuntime: FATAL EXCEPTION: main
01-22 23:48:09.676  5175  5175 E AndroidRuntime: Process: com.android.phone, PID: 5175
01-22 23:48:09.676  5175  5175 E AndroidRuntime: java.lang.NullPointerException: Attempt to invoke interface method 'void com.android.internal.telephony.IIntegerConsumer.accept(int)' on a null object reference
01-22 23:48:09.676  5175  5175 E AndroidRuntime: 	at com.android.phone.PhoneInterfaceManager$MainThreadHandler.handleMessage(PhoneInterfaceManager.java:2143)
01-22 23:48:09.676  5175  5175 E AndroidRuntime: 	at android.os.Handler.dispatchMessage(Handler.java:109)
01-22 23:48:09.676  5175  5175 E AndroidRuntime: 	at android.os.Looper.loopOnce(Looper.java:232)
01-22 23:48:09.676  5175  5175 E AndroidRuntime: 	at android.os.Looper.loop(Looper.java:317)
01-22 23:48:09.676  5175  5175 E AndroidRuntime: 	at android.app.ActivityThread.main(ActivityThread.java:8792)
01-22 23:48:09.676  5175  5175 E AndroidRuntime: 	at java.lang.reflect.Method.invoke(Native Method)
01-22 23:48:09.676  5175  5175 E AndroidRuntime: 	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:595)
01-22 23:48:09.676  5175  5175 E AndroidRuntime: 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:871)

Change-Id: I3bf68273609a33fd551196a2d7c2b02f2916ae76
---
 src/com/android/phone/PhoneInterfaceManager.java | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/packages/services/Telephony/src/com/android/phone/PhoneInterfaceManager.java b/packages/services/Telephony/src/com/android/phone/PhoneInterfaceManager.java
index bafcc6f76..026c6449b 100644
--- a/packages/services/Telephony/src/com/android/phone/PhoneInterfaceManager.java
+++ b/packages/services/Telephony/src/com/android/phone/PhoneInterfaceManager.java
@@ -2133,6 +2133,10 @@ public void handleMessage(Message msg) {
                     request = (MainThreadRequest) ar.userObj;
                     IIntegerConsumer callback =
                             ((Pair<Integer, IIntegerConsumer>) request.argument).second;
+                    if (callback == null) {
+                        Log.w(LOG_TAG, "setSimPower: callback not available.");
+                        break;
+                    }
                     if (ar.exception != null) {
                         loge("setSimPower exception: " + ar.exception);
                         int errorCode = TelephonyManager.CallForwardingInfoCallback
@@ -2152,14 +2156,14 @@ public void handleMessage(Message msg) {
                         }
                         try {
                             callback.accept(errorCode);
-                        } catch (RemoteException e) {
+                        } catch (NullPointerException|RemoteException e) {
                             // Ignore if the remote process is no longer available to call back.
                             Log.w(LOG_TAG, "setSimPower: callback not available.");
                         }
                     } else {
                         try {
                             callback.accept(TelephonyManager.SET_SIM_POWER_STATE_SUCCESS);
-                        } catch (RemoteException e) {
+                        } catch (NullPointerException|RemoteException e) {
                             // Ignore if the remote process is no longer available to call back.
                             Log.w(LOG_TAG, "setSimPower: callback not available.");
                         }
