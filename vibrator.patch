--- a/vendor/qcom/opensource/vibrator/aidl/Vibrator.cpp
+++ b/vendor/qcom/opensource/vibrator/aidl/Vibrator.cpp
@@ -608,13 +608,13 @@ ndk::ScopedAStatus Vibrator::perform(Effect effect, EffectStrength es, const std
     ALOGD("Vibrator perform effect %d", effect);
     if (Offload.mEnabled == 1) {
         if ((effect < Effect::CLICK) ||
-            ((effect > Effect::HEAVY_CLICK) && (effect < Effect::RINGTONE_12)) ||
+            ((effect > Effect::TEXTURE_TICK) && (effect < Effect::RINGTONE_12)) ||
             (effect > Effect::RINGTONE_15))
             return ndk::ScopedAStatus(AStatus_fromExceptionCode(EX_UNSUPPORTED_OPERATION));
     }
 #ifndef USE_EFFECT_STREAM
     else {
-        if (effect < Effect::CLICK ||  effect > Effect::HEAVY_CLICK)
+        if (effect < Effect::CLICK ||  effect > Effect::TEXTURE_TICK)
             return ndk::ScopedAStatus(AStatus_fromExceptionCode(EX_UNSUPPORTED_OPERATION));
     }
 #endif
@@ -622,7 +622,11 @@ ndk::ScopedAStatus Vibrator::perform(Effect effect, EffectStrength es, const std
     if (es != EffectStrength::LIGHT && es != EffectStrength::MEDIUM && es != EffectStrength::STRONG)
         return ndk::ScopedAStatus(AStatus_fromExceptionCode(EX_UNSUPPORTED_OPERATION));
 
-    ret = ff.playEffect((static_cast<int>(effect)), es, &playLengthMs);
+    if (effect == Effect::TEXTURE_TICK) {
+        ret = ff.playEffect((static_cast<int>(Effect::TICK)), es, &playLengthMs);
+    } else {
+        ret = ff.playEffect((static_cast<int>(effect)), es, &playLengthMs);
+    }
     if (ret != 0)
         return ndk::ScopedAStatus(AStatus_fromExceptionCode(EX_SERVICE_SPECIFIC));
 
@@ -646,13 +650,14 @@ ndk::ScopedAStatus Vibrator::getSupportedEffects(std::vector<Effect>* _aidl_retu
     if (Offload.mEnabled == 1) {
         *_aidl_return = {Effect::CLICK, Effect::DOUBLE_CLICK, Effect::TICK, Effect::THUD,
                          Effect::POP, Effect::HEAVY_CLICK, Effect::RINGTONE_12,
-                         Effect::RINGTONE_13, Effect::RINGTONE_14, Effect::RINGTONE_15};
+                         Effect::RINGTONE_13, Effect::RINGTONE_14, Effect::RINGTONE_15,
+                         Effect::TEXTURE_TICK};
         return ndk::ScopedAStatus::ok();
     }
 
 #ifndef USE_EFFECT_STREAM
     *_aidl_return = {Effect::CLICK, Effect::DOUBLE_CLICK, Effect::TICK, Effect::THUD,
-                     Effect::POP, Effect::HEAVY_CLICK};
+                     Effect::POP, Effect::HEAVY_CLICK, Effect::TEXTURE_TICK};
 #else
     for (int32_t effectId = static_cast<int32_t>(Effect::CLICK);
          effectId <= static_cast<int32_t>(Effect::TEXTURE_TICK);
