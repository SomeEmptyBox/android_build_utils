name: Build Kernel

on:
  workflow_dispatch:

jobs:
  build-kernel:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize Build Space
        uses: AdityaGarg8/remove-unwanted-software@master
        with:
          remove-dotnet: 'true'          # Frees ~2 GB
          remove-android: 'true'         # Frees ~9 GB
          remove-haskell: 'true'         # Frees ~5.2 GB
          remove-codeql: 'true'          # Frees ~5.4 GB
          remove-docker-images: 'true'   # Frees ~3.2 GB
          remove-large-packages: 'true'  # Frees ~3.1 GB
          remove-swapfile: 'true'        # Frees ~4 GB
          remove-cached-tools: 'false'   # Avoid unless confirmed safe

      - name: Checkout
        uses: actions/checkout@main
        with:
          lfs: false

      - name: Set environment variables
        run: |
          echo "STOCK_ROM=$(mktemp /tmp/remote_zip_XXXXXX.zip)" >> $GITHUB_ENV
          echo "STOCK_ROM_URL=https://mirrors.lolinet.com/firmware/lenomola/2024/eqe/official/RETIN/XT2403-1_EQE_RETIN_15_V1UMS35H.10-67-7-1_subsidy-DEFAULT_regulatory-DEFAULT_cid50_CFC.xml.zip" >> $GITHUB_ENV
          echo "MAGISKBOOT=https://raw.githubusercontent.com/TheWildJames/Android_Kernel_Tutorials/gki-2.0/tools/magiskboot" >> $GITHUB_ENV

      - name: Install Packages and Dependencies
        run: |
          sudo apt update -y && sudo apt install -y git-core gnupg flex bison build-essential zip curl zlib1g-dev libc6-dev-i386 x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig repo
          sudo curl -fLSs "$MAGISKBOOT" -o /usr/local/bin/magiskboot && sudo chmod +x /usr/local/bin/magiskboot
          curl -fLSs "$STOCK_ROM_URL" -o "$STOCK_ROM"


      - name: Initialize and Sync Kernel Source
        run: |
          repo init -u https://android.googlesource.com/kernel/manifest -b common-android13-5.15
          mkdir -p .repo/local_manifests && cp manifests/kernel.xml .repo/local_manifests/default.xml
          repo --trace sync -c -j$(nproc --all) --no-tags --fail-fast

      - name: Build
        run: |
          LTO=thin BUILD_CONFIG=sm7550/build.config.gki.aarch64 build/build.sh || exit 1

      - name: Make bootimgs
        run: |
          mkdir -p artifacts && cd artifacts
          unzip -p "$STOCK_ROM" "boot.img" > stock_boot.img
          magiskboot unpack stock_boot.img
          cp ../out/*/dist/Image kernel
          magiskboot repack stock_boot.img boot.img

      - name: Make AnyKernel Zip
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3.git && cd AnyKernel3
          sed -i 's|^kernel\.string=.*|kernel.string=Kernel by SomeEmptyBox|' anykernel.sh
          sed -i 's|^do\.devicecheck=.*|do.devicecheck=1|' anykernel.sh
          sed -i 's|^device\.name1=.*|device.name1=eqe|' anykernel.sh
          cp ../out/*/dist/Image .
          zip -r ../artifacts/AnyKernel.zip .

      - name: Upload Artifacts
        uses: actions/upload-artifact@main
        with:
          path: artifacts/*
