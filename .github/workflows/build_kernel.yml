name: Build Kernel

on:
  workflow_dispatch:

jobs:
  build-kernel:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize Build Space
        uses: AdityaGarg8/remove-unwanted-software@master
        with:
          remove-dotnet: 'true'          # Frees ~2 GB
          remove-android: 'true'         # Frees ~9 GB
          remove-haskell: 'true'         # Frees ~5.2 GB
          remove-codeql: 'true'          # Frees ~5.4 GB
          remove-docker-images: 'true'   # Frees ~3.2 GB
          remove-large-packages: 'true'  # Frees ~3.1 GB
          remove-swapfile: 'true'        # Frees ~4 GB
          remove-cached-tools: 'false'   # Avoid unless confirmed safe

      - name: Checkout
        uses: actions/checkout@main
        with:
          lfs: false

      - name: Install Packages
        run: sudo apt update -y && sudo apt install -y repo

      - name: Initialize and Sync Kernel Source
        run: |
          repo init -u https://android.googlesource.com/kernel/manifest -b common-android13-5.15
          mkdir -p .repo/local_manifests && cp manifests/kernel.xml .repo/local_manifests/default.xml
          repo --trace sync -c -j$(nproc --all) --no-tags --fail-fast

      - name: Add KernelSU
        run: |
          cd sm7550
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -

      - name: Apply SUSFS Patches
        run: |
          cd sm7550
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android13-5.15
          cp susfs4ksu/kernel_patches/fs/* fs
          cp susfs4ksu/kernel_patches/include/linux/* include/linux
          cd KernelSU
          patch -p1 < ../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch
          cd ..
          patch -p1 < susfs4ksu/kernel_patches/50_add_susfs_in_gki-android13-5.15.patch

      - name: Add SUSFS Configuration Settings
        run: |
          cat << EOF >> sm7550/arch/arm64/configs/gki_defconfig
          CONFIG_KSU_SUSFS=y
          CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=n
          CONFIG_KSU_SUSFS_SUS_PATH=y
          CONFIG_KSU_SUSFS_SUS_MOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y
          CONFIG_KSU_SUSFS_SUS_KSTAT=y
          CONFIG_KSU_SUSFS_SUS_OVERLAYFS=y
          CONFIG_KSU_SUSFS_TRY_UMOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y
          CONFIG_KSU_SUSFS_SPOOF_UNAME=y
          CONFIG_KSU_SUSFS_ENABLE_LOG=y
          CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y
          CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y
          CONFIG_KSU_SUSFS_OPEN_REDIRECT=y
          CONFIG_KSU_SUSFS_SUS_SU=y
          EOF
          # Remove check_defconfig
          sed -i 's|check_defconfig||g' sm7550/build.config.gki

      - name: Build
        run: |
          LTO=thin BUILD_CONFIG=sm7550/build.config.gki.aarch64 build/build.sh || exit 1
          mkdir artifacts && cd artifacts
          cp ../out/*/dist/Image .

      - name: Make AnyKernel Zip
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3.git && cd AnyKernel3
          sed -i 's|^kernel\.string=.*|kernel.string=Kernel by SomeEmptyBox|' anykernel.sh
          sed -i 's|^do\.devicecheck=.*|do.devicecheck=1|' anykernel.sh
          sed -i 's|^device\.name1=.*|device.name1=eqe|' anykernel.sh
          cp ../out/*/dist/Image .
          zip -r ../artifacts/AnyKernel.zip .

      - name: Upload Artifacts
        uses: actions/upload-artifact@main
        with:
          path: artifacts/*
